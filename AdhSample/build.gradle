plugins {
    id 'application'
    id 'java'
}
apply from: '../build.gradle'

description = 'AdH Sample'
    
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) { // compile-time options:
        options.compilerArgs << '-Xdiags:verbose'
        options.compilerArgs << '-Xlint:unchecked'
        options.deprecation = true
        options.encoding = 'UTF-8'
    }
    tasks.withType(JavaExec) { // runtime options:
        args = []
        classpath sourceSets.main.runtimeClasspath
        //debug true
        enableAssertions true
        //jvmArgs '-verbose:gc'
        //jvmArgs '-Xbatch'
        //jvmArgs '-Xms512m', '-Xmx512m'
        //jvmArgs '-XX:+PrintCompilation'
        //jvmArgs '-XX:+UseConcMarkSweepGC'
        jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=10'
    }
}

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
mainClassName = 'fr.adh.client.AdhSample'
if (!hasProperty('mainClass')) {
    ext.mainClass = mainClassName
}
jar.manifest.attributes('Main-Class': mainClassName)

dependencies {
    implementation project(':AdhCommon')
    //implementation fileTree(dir: 'libs', include: '*.jar')
    
    implementation 'com.github.stephengold:Minie:' + minieVersion
    implementation 'com.github.stephengold:Minie:' + minieVersion  + ':sources'
    
    implementation 'org.jmonkeyengine:jme3-core:' + jmeVersion
    implementation 'org.jmonkeyengine:jme3-core:' + jmeVersion + ':sources'
    //implementation 'org.jmonkeyengine:jme3-bullet:' + jmeVersion
    //implementation 'org.jmonkeyengine:jme3-bullet:' + jmeVersion + ':sources'
    //runtimeOnly 'org.jmonkeyengine:jme3-bullet-native:' + jmeVersion
    implementation 'org.jmonkeyengine:jme3-desktop:' + jmeVersion
    implementation 'org.jmonkeyengine:jme3-desktop:' + jmeVersion + ':sources'
    implementation 'org.jmonkeyengine:jme3-effects:' + jmeVersion
    implementation 'org.jmonkeyengine:jme3-effects:' + jmeVersion + ':sources'
    implementation 'org.jmonkeyengine:jme3-jogl:' + jmeVersion
    implementation 'org.jmonkeyengine:jme3-jogl:' + jmeVersion + ':sources'
    implementation 'org.jmonkeyengine:jme3-networking:' + jmeVersion
    implementation 'org.jmonkeyengine:jme3-networking:' + jmeVersion + ':sources'
    implementation 'org.jmonkeyengine:jme3-niftygui:' + jmeVersion
    implementation 'org.jmonkeyengine:jme3-niftygui:' + jmeVersion + ':sources'
    implementation 'org.jmonkeyengine:jme3-terrain:' + jmeVersion
    implementation 'org.jmonkeyengine:jme3-terrain:' + jmeVersion + ':sources'
    runtimeOnly 'org.jmonkeyengine:jme3-lwjgl3:' + jmeVersion
    runtimeOnly 'org.jmonkeyengine:jme3-lwjgl3:' + jmeVersion  + ':sources'
    runtimeOnly 'org.jmonkeyengine:jme3-blender:' + jmeVersion
    runtimeOnly 'org.jmonkeyengine:jme3-blender:' + jmeVersion + ':sources'
    runtimeOnly 'org.jmonkeyengine:jme3-jogg:' + jmeVersion
    runtimeOnly 'org.jmonkeyengine:jme3-jogg:' + jmeVersion + ':sources'
    runtimeOnly 'org.jmonkeyengine:jme3-plugins:' + jmeVersion
    runtimeOnly 'org.jmonkeyengine:jme3-plugins:' + jmeVersion + ':sources'

    // get textures and sample to start working quickly
    runtimeOnly 'org.jmonkeyengine:jme3-testdata:3.3.0-alpha2'
    runtimeOnly group: 'com.github.nifty-gui', name: 'nifty-examples', version: '1.4.2'
    // Demo
    //implementation 'com.jayfella:jme-world-pager:1.0.1'
    //implementation 'com.jayfella:jme-fastnoise:1.0.1'
    //implementation 'com.jayfella:jme-jfx-11:1.1.3' 
    //implementation 'com.github.jayfella:jme-position-plotters:-SNAPSHOT'
    //implementation 'com.jayfella:jme-fastnoise:1.0.1'
    
}

// cleanup tasks
clean.dependsOn('cleanAll')
task cleanAll(type: Delete) {
    delete fileTree(dir: '.', include: '*.dll')
    delete fileTree(dir: '.', include: '*.dylib')
    delete fileTree(dir: '.', include: 'hs_err_pid*.log')
    delete fileTree(dir: '.', include: '*.so')
}
