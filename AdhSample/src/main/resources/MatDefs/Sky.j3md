MaterialDef Atmosphere {

    MaterialParameters {

        // work from nearest to farthest.
        // clouds, stars, skySunColor

        // Clouds
        Texture2D   Cloud_Noise // A noise texture used to generate clouds.
        Color       Cloud_Color // the color of the clouds.
        Vector2     Cloud_Speed // the speed of the clouds x,z
        Float       Cloud_MorphDirection
        Int       	Cloud_Octaves

        Vector4 Cloud_Settings // vec4( scale, cloudCover, brightness, morphSpeed)

        // Stars
        Texture2D StarColors
        Vector3 Stars // vec3(amount, brightness, size)


        // sky
        Vector3 LightDir

        Vector3 CameraPos
        Vector3 InvWaveLength

        Float InnerRadius
        Float KrESun;
        Float KmESun;
        Float Kr4PI;
        Float Km4PI;
        Float G
        Float G2

        Float Scale
        Float ScaleDepth
        Float ScaleOverScaleDepth

        Float Exposure

        Float Samples
        Int NumberOfSamples

        Boolean HDR

        Texture2D CloudTexture
        Texture2D CloudNormal
        Color SunColor
        Color AmbientColor

    }

    Technique {

        VertexShader GLSL100:   MatDefs/Sky.vert
        FragmentShader GLSL100: MatDefs/Sky.frag

        WorldParameters {
            WorldViewProjectionMatrix
            ViewProjectionMatrix
            NormalMatrix
            WorldViewMatrix
            ViewMatrix
            CameraPosition
            WorldMatrix
            Time
        }

        Defines {
            HDR_ENABLED : HDR
        }

    }

}